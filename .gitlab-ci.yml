image: docker:17.05.0
stages:
  - build
  - release
  - containerize
before_script:
  - apk update
  - apk add bash tar rsync git curl make file
  - sed -i -e '/ linux\/arm/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ linux\/s390/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ linux\/386/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ linux\/ppc64le/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ darwin\/amd64/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ darwin\/386/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ windows\/386/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ windows\/amd64/ s/^/#/' hack/lib/golang.sh 


build:
  stage: build
  variables:
    KUBE_DOCKER_REGISTRY: "${CI_REGISTRY_IMAGE}"
    KUBE_DOCKER_IMAGE_TAG: "${CI_PIPELINE_ID}.${CI_JOB_ID}"
  script:
    - ./build/run.sh make cross || sleep 99999
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 1 weeks
    paths:
      - _output/

release:
  stage: release
  variables:
    KUBE_DOCKER_REGISTRY: "${CI_REGISTRY_IMAGE}"
    KUBE_DOCKER_IMAGE_TAG: "${CI_PIPELINE_ID}.${CI_JOB_ID}"
  script:
    - ./build/release.sh || sleep 99999
    - sleep 99999
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 1 week
    paths:
      - _output/

containerize:
  stage: containerize
  variables:
    KUBE_DOCKER_REGISTRY: "${CI_REGISTRY_IMAGE}"
    KUBE_DOCKER_IMAGE_TAG: "${CI_PIPELINE_ID}.${CI_JOB_ID}"
  script:
    - pushd cluster/images/hyperkube &&
        make build VERSION=$KUBE_DOCKER_IMAGE_TAG REGISTRY=$KUBE_DOCKER_IMAGE_TAG
    - docker push "$CI_REGISTRY_IMAGE/hyperkube-amd64:$CI_COMMIT_SHA" || sleep 99999
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 1 week
    paths:
      - _output/
