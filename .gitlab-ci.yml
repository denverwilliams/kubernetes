image: docker:17.05.0
stages:
  - build
  - release

before_script:
  - apk update
  - apk add bash tar rsync git curl make file
  - sed -i -e '/ linux\/arm/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ linux\/s390/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ linux\/386/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ linux\/ppc64le/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ darwin\/amd64/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ darwin\/386/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ windows\/386/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ windows\/amd64/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e 's/kube::release::package_tarballs//g' ./build/release.sh

build:
  stage: build
  variables:
    KUBE_DOCKER_REGISTRY: "${CI_REGISTRY_IMAGE}"
    KUBE_DOCKER_IMAGE_TAG: "${CI_COMMIT_REF_SLUG}.job.${CI_JOB_ID}"
    KUBE_RELEASE_RUN_TESTS: "n"
    KUBE_FASTBUILD: "false"
    KUBE_VERBOSE: "0"
    FEDERATION: "false"
  script:
    - ./build/release.sh || sleep 99999
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker push "$CI_REGISTRY_IMAGE/hyperkube-amd64:$KUBE_DOCKER_IMAGE_TAG"
    - cp -a _output/dockerized/bin/linux/amd64 linux-amd64
    - echo export TF_VAR_kubelet_image_url="$CI_REGISTRY_IMAGE/hyperkube-amd64" > ci.vars
    - echo export TF_VAR_kubelet_image_tag="$KUBE_DOCKER_IMAGE_TAG" >> ci.vars
    - echo export KUBERNETES_IMAGE="$CI_REGISTRY_IMAGE/hyperkube-amd64" > release.env
    - echo export KUBERNETES_TAG="$KUBE_DOCKER_IMAGE_TAG" >> release.env
    - cat release.env
  artifacts:
    name: "${CI_JOB_NAME}.${CI_PIPELINE_ID}.${CI_JOB_ID}"
    expire_in: 1 weeks
    paths:
      - ci.vars
      - release.env
      - linux-amd64

build-e2e:
  stage: build
  variables:
    KUBE_DOCKER_REGISTRY: "${CI_REGISTRY_IMAGE}"
    KUBE_DOCKER_IMAGE_TAG: "${CI_COMMIT_REF_SLUG}.job.${CI_JOB_ID}"
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build -t "$CI_REGISTRY_IMAGE/kubernetes-e2e:$KUBE_DOCKER_IMAGE_TAG" ./e2e/
    - docker push "$CI_REGISTRY_IMAGE/kubernetes-e2e:$KUBE_DOCKER_IMAGE_TAG"
    - echo export KUBERNETES_E2E_IMAGE="$CI_REGISTRY_IMAGE/kubernetes-e2e" > e2e.env
    - echo export KUBERNETES_E2E_TAG="$KUBE_DOCKER_IMAGE_TAG" >> e2e.env
  artifacts:
    name: "${CI_JOB_NAME}.${CI_PIPELINE_ID}.${CI_JOB_ID}"
    expire_in: 1 weeks
    paths:
      - e2e.env


release:
  stage: release
  script:
    - cat e2e.env
    - cat release.env
  artifacts:
    name: "${CI_JOB_NAME}.${CI_PIPELINE_ID}.${CI_JOB_ID}"
    expire_in: 1 weeks
    paths:
      - ci.vars
      - release.env
      - e2e.env
      - linux-amd64
