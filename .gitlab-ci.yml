image: docker:17.05.0
stages:
  - build
  - release
  - containerize
before_script:
  - apk update
  - apk add bash tar rsync git curl make file
  - sed -i -e '/ linux\/arm/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ linux\/s390/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ linux\/386/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ linux\/ppc64le/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ darwin\/amd64/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ darwin\/386/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ windows\/386/ s/^/#/' hack/lib/golang.sh 
  - sed -i -e '/ windows\/amd64/ s/^/#/' hack/lib/golang.sh 

build:
  stage: build
  variables:
    KUBE_RELEASE_RUN_TESTS: "n"
    FEREDATION: "false"
  script:
    - ./build/run.sh make cross || sleep 99999
  artifacts:
    name: "${CI_JOB_NAME}.${CI_PIPELINE_ID}.${CI_JOB_ID}"
    expire_in: 1 weeks
    paths:
      - _output/dockerized
      - _output/images

release:
  stage: release
  variables:
    KUBE_RELEASE_RUN_TESTS: "n"
    FEREDATION: "false"
    KUBE_DOCKER_REGISTRY: "${CI_REGISTRY_IMAGE}"
    KUBE_DOCKER_IMAGE_TAG: "ci.${CI_PIPELINE_ID}.${CI_JOB_ID}"
  script:
    - ./build/release.sh || sleep 99999
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY || sleep 999999
    - docker push "$CI_REGISTRY_IMAGE/hyperkube-amd64:$KUBE_DOCKER_IMAGE_TAG" || sleep 99999
    - docker push "$CI_REGISTRY_IMAGE/kube-proxy-amd64:$KUBE_DOCKER_IMAGE_TAG" || sleep 99999
    - docker push "$CI_REGISTRY_IMAGE/kube-apiserver-amd64:$KUBE_DOCKER_IMAGE_TAG" || sleep 99999
    - docker push "$CI_REGISTRY_IMAGE/kube-controller-manager-amd64:$KUBE_DOCKER_IMAGE_TAG" || sleep 99999
    - docker push "$CI_REGISTRY_IMAGE/kube-scheduler-amd64:$KUBE_DOCKER_IMAGE_TAG" || sleep 99999
    - docker push "$CI_REGISTRY_IMAGE/kube-aggregator-amd64:$KUBE_DOCKER_IMAGE_TAG" || sleep 99999
    - sleep 99999
  artifacts:
    name: "${CI_JOB_NAME}.${CI_PIPELINE_ID}.${CI_JOB_ID}"
    expire_in: 1 week
    paths:
      - _output/release-stage
      - _output/release-tars
